---
// @ts-nocheck
import '@slate-ui/core/src/container/container.css'
import '@slate-ui/core/src/heading/heading.css'
import '@slate-ui/core/src/stack/stack.css'
import '@slate-ui/core/src/text/text.css'
import App from '~/app.astro'
import '~/components/project-summary/project-summary.css'
---

<script>
  import '@slate-ui/core/src/container/container.js'
  import '@slate-ui/core/src/heading/heading.js'
  import '@slate-ui/core/src/link/link.js'
  import '@slate-ui/core/src/stack/stack.js'
  import '@slate-ui/core/src/text/text.js'
  import '~/components/project-summary/project-summary.js'
  import '~/components/project-summary/project-summary-content.js'
  import '~/components/project-summary/project-summary-images.js'
</script>

<App title="Excel VBA date picker" padding="lg">
  <slate-container size="lg">
    <slate-stack gap="5xl">
      <te-project-summary>
        <te-project-summary-content>
          <slate-stack gap="xs">
            <h1 slate-heading size="2xl" weight="bold">Excel VBA date picker</h1>
          </slate-stack>
          <slate-text>
            A fully customizable date picker widget with no dependencies, coded in Excel VBA.
            Currently with over 10,000 downloads.
          </slate-text>
          <slate-link
            href="https://f000.backblazeb2.com/file/trevoreyre/CalendarForm+v1.5.2.zip"
            target="_blank">Download</slate-link
          >
        </te-project-summary-content>
        <div class="project-summary-image">
          <img width="854" height="532" src="/img/excel-datepicker.png" />
        </div>
      </te-project-summary>
      <section>
        <slate-container size="md">
          <slate-stack gap="lg">
            <h2 slate-heading size="xl" weight="bold">Overview</h2>
            <slate-text>
              The goal in creating this form was first and foremost to overcome the monstrosity that
              is the Microsoft MonthView control. If you're reading this, you probably already know
              what I'm talking about. Many others have been in my place and have come up with their
              own date pickers to solve this problem. So why yet another custom date picker?
            </slate-text>
            <slate-text>I was most interested in the following features:</slate-text>
            <slate-text>
              <ul>
                <li>
                  Ease of use. I wanted a completely self-contained form that could be imported into
                  any VBA project and used without any additional coding.
                </li>
                <li>
                  Simple, attractive design. While a lot of custom date pickers on the internet look
                  good and work well, none of them quite nailed it for me in terms of style and UI
                  design.
                </li>
                <li>
                  Fully customizable functionality and look. I tried to include as many of the
                  options from the MonthView control as I could, without getting too messy.
                </li>
              </ul>
            </slate-text>
            <slate-text>
              Since none of the date pickers I have been able to find in all my searching have quite
              completed my checklist, here we are! Now my hope is that some other tired soul may
              also benefit from my labors.
            </slate-text>
            <slate-text>
              If you encounter any bugs, or have any great ideas or feature requests that could
              improve this bad boy, please send me a message.
            </slate-text>
          </slate-stack>
        </slate-container>
      </section>
      <section>
        <slate-container size="md">
          <slate-stack gap="lg">
            <h2 slate-heading size="xl" weight="bold">Importing the date picker</h2>
            <slate-text>
              To use the Excel VBA date picker, you must first import the userform into your
              project. Start by clicking the link above to download <code>
                CalendarForm v1.5.2.zip
              </code>. Extract the files in the zip archive, and save the <code>
                CalendarForm.frm
              </code> and
              <code>CalendarForm.frx</code> files on your computer.
            </slate-text>
            <slate-text>
              Open a new Excel workbook, and press <code>alt-F11</code> to open the VBA project window.
              Right-click on the left hand side of the project window, and select
              <code>Import File...</code> from the menu. Find the <code>CalendarForm.frm</code> file
              you saved on your computer, and click <code>Open</code>. This will import the date
              picker into your workbook, so it is ready to use.
            </slate-text>
          </slate-stack>
        </slate-container>
      </section>
      <section>
        <slate-container size="md">
          <slate-stack gap="lg">
            <h2 slate-heading size="xl" weight="bold">Using the date picker</h2>
            <slate-text>
              Once the <code>CalendarForm</code> date picker has been imported into your workbook, it
              can be used by calling the <code>CalendarForm.GetDate</code> function. The
              <code>GetDate</code> function is the single point of entry into the date picker. It controls
              everything. Every argument in the function is optional, meaning your function call an be
              as simple as <code>dateVariable = CalendarForm.GetDate</code>. That's all there is to
              it. The date picker initializes and pops up, the user selects a date, and the
              selection is returned to your variable.
            </slate-text>
            <pre><code>Dim dateVariable as Date
dateVariable = CalendarForm.GetDate</code></pre>
            <slate-text>
              From there, you can use as many or as few arguments as you want in order to get the
              desired calendar that suits your needs. Below are some examples of different calendars
              you can get from the various arguments in the <code>GetDate</code> function.
            </slate-text>
            <slate-text>
              All default values are also set in the GetDate function, so if you want to change
              default colors or behavior without having to explicitly do so in every function call,
              you can set those values in the argument list for the function. By setting the various
              arguments, you can obtain vastly different calendars, all with the same function.
            </slate-text>
          </slate-stack>
        </slate-container>
      </section>
    </slate-stack>
  </slate-container>
</App>

<style>
  @layer pages {
    .project-summary-image {
      flex: 1.5;
    }

    .project-summary-image img {
      border-radius: var(--border-radius-none);
      box-shadow: none;
    }
  }
</style>
